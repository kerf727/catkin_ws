<launch>
    <!-- Launch gazebo file which will start up gazebo and load controllers -->
    <include file="$(find hexapod_gazebo)/launch/gazebo.launch"/>

    <!-- Start up kinematic solver -->
    <node name="kinematics_solver" pkg="hexapod_control" type="kinematics_solver" respawn="false"/>
    <node name="analytical_kinematics_solver" pkg="hexapod_control" type="analytical_kinematics_solver" respawn="false" output="screen"/>

    <!-- Start up joint action servers -->
    <node name="leg_L1_joint_action_server" pkg="hexapod_control" type="leg_L1_joint_action_server" respawn="false"/>
    <node name="leg_R1_joint_action_server" pkg="hexapod_control" type="leg_R1_joint_action_server" respawn="false"/>
    <node name="leg_L2_joint_action_server" pkg="hexapod_control" type="leg_L2_joint_action_server" respawn="false"/>
    <node name="leg_R2_joint_action_server" pkg="hexapod_control" type="leg_R2_joint_action_server" respawn="false"/>
    <node name="leg_L3_joint_action_server" pkg="hexapod_control" type="leg_L3_joint_action_server" respawn="false"/>
    <node name="leg_R3_joint_action_server" pkg="hexapod_control" type="leg_R3_joint_action_server" respawn="false"/>

    <!-- Start up pose action servers -->
    <node name="leg_L1_pose_action_server" pkg="hexapod_control" type="leg_L1_pose_action_server" respawn="true"/>
    <node name="leg_R1_pose_action_server" pkg="hexapod_control" type="leg_R1_pose_action_server" respawn="true"/>
    <node name="leg_L2_pose_action_server" pkg="hexapod_control" type="leg_L2_pose_action_server" respawn="true"/>
    <node name="leg_R2_pose_action_server" pkg="hexapod_control" type="leg_R2_pose_action_server" respawn="true"/>
    <node name="leg_L3_pose_action_server" pkg="hexapod_control" type="leg_L3_pose_action_server" respawn="true"/>
    <node name="leg_R3_pose_action_server" pkg="hexapod_control" type="leg_R3_pose_action_server" respawn="true"/>

    <!-- Start up trajectory action servers -->
    <node name="leg_L1_trajectory_action_server" pkg="hexapod_control" type="leg_L1_trajectory_action_server" respawn="false"/>
    <node name="leg_R1_trajectory_action_server" pkg="hexapod_control" type="leg_R1_trajectory_action_server" respawn="false"/>
    <node name="leg_L2_trajectory_action_server" pkg="hexapod_control" type="leg_L2_trajectory_action_server" respawn="false"/>
    <node name="leg_R2_trajectory_action_server" pkg="hexapod_control" type="leg_R2_trajectory_action_server" respawn="false"/>
    <node name="leg_L3_trajectory_action_server" pkg="hexapod_control" type="leg_L3_trajectory_action_server" respawn="false"/>
    <node name="leg_R3_trajectory_action_server" pkg="hexapod_control" type="leg_R3_trajectory_action_server" respawn="false"/>
    
    <!-- Start up IK action servers -->
    <rosparam file="$(find hexapod_control)/config/geometry_parameters.yaml" ns="/hexapod/geometry"/>
    <!-- <node name="leg_L1_AIK_action_server" pkg="hexapod_control" type="leg_L1_AIK_action_server" respawn="false" output="screen"/>
    <node name="leg_R1_AIK_action_server" pkg="hexapod_control" type="leg_R1_AIK_action_server" respawn="false" output="screen"/>
    <node name="leg_L2_AIK_action_server" pkg="hexapod_control" type="leg_L2_AIK_action_server" respawn="false" output="screen"/>
    <node name="leg_R2_AIK_action_server" pkg="hexapod_control" type="leg_R2_AIK_action_server" respawn="false" output="screen"/>
    <node name="leg_L3_AIK_action_server" pkg="hexapod_control" type="leg_L3_AIK_action_server" respawn="false" output="screen"/>
    <node name="leg_R3_AIK_action_server" pkg="hexapod_control" type="leg_R3_AIK_action_server" respawn="false" output="screen"/> -->

    <!-- Start up gait controller -->
    <rosparam file="$(find hexapod_control)/config/gait_parameters.yaml" ns="/hexapod/gait"/>
    <node name="gait_controller_teleop" pkg="hexapod_control" type="gait_controller_teleop" respawn="false"/>

    <!-- Start up force sensor and stability stuff -->
    <!-- <node name="force_sensor_node" pkg="hexapod_control" type="force_sensor_node" respawn="true"/>
    <node name="stability_margin_node" pkg="hexapod_control" type="stability_margin_node" respawn="true"/> -->

    <!-- Set to output DEBUG messages -->
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find hexapod_config)/custom_rosconsole.conf"/>
</launch>